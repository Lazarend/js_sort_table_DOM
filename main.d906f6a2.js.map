{"version":3,"sources":["scripts/main.js"],"names":["document","addEventListener","headerItems","querySelectorAll","tableRows","table","querySelector","sortTable","item","itemIndex","indexOf","target","sortedTableRows","sort","rowA","rowB","cellA","children","textContent","trim","cellB","startsWith","isNaN","parseFloat","replace","localeCompare","innerHTML","forEach","sortedRow","appendChild","headerItem"],"mappings":";AAAA,aAEA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAAA,SAASC,iBAAiB,mBAAoB,WACtCC,IAAAA,EAAcF,SAASG,iBAAiB,YACxCC,EAAYJ,SAASG,iBAAiB,YACtCE,EAAQL,SAASM,cAAc,SAE5BC,SAAAA,EAAUC,GACXC,IAAAA,EAAY,EAAIP,GAAaQ,QAAQF,EAAKG,QAE1CC,EAAkB,EAAIR,GAAWS,KAAK,SAACC,EAAMC,GAC3CC,IAAAA,EAAQF,EAAKG,SAASR,GAAWS,YAAYC,OAC7CC,EAAQL,EAAKE,SAASR,GAAWS,YAAYC,OAE/CH,OAAAA,EAAMK,WAAW,OAASC,OAAON,GAC5BO,WAAWP,EAAMQ,QAAQ,QAAS,KACvCD,WAAWH,EAAMI,QAAQ,QAAS,KAG/BR,EAAMS,cAAcL,KAG7Bf,EAAMqB,UAAY,GAElBd,EAAgBe,QAAQ,SAACC,GACvBvB,EAAMwB,YAAYD,KAItB1B,EAAYyB,QAAQ,SAACG,GACnBA,EAAW7B,iBAAiB,QAASM","file":"main.d906f6a2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const headerItems = document.querySelectorAll('thead th');\n  const tableRows = document.querySelectorAll('tbody tr');\n  const table = document.querySelector('tbody');\n\n  function sortTable(item) {\n    const itemIndex = [...headerItems].indexOf(item.target);\n\n    const sortedTableRows = [...tableRows].sort((rowA, rowB) => {\n      const cellA = rowA.children[itemIndex].textContent.trim();\n      const cellB = rowB.children[itemIndex].textContent.trim();\n\n      if (cellA.startsWith('$') || !isNaN(+cellA)) {\n        return parseFloat(cellA.replace(/[$,]/g, ''))\n        - parseFloat(cellB.replace(/[$,]/g, ''));\n      }\n\n      return cellA.localeCompare(cellB);\n    });\n\n    table.innerHTML = '';\n\n    sortedTableRows.forEach((sortedRow) => {\n      table.appendChild(sortedRow);\n    });\n  }\n\n  headerItems.forEach((headerItem) => {\n    headerItem.addEventListener('click', sortTable);\n  });\n});\n"]}